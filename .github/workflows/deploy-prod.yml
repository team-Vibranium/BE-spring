name: Deploy (Prod)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: aningcall-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute VERSION
        id: ver
        run: |
          echo "VERSION=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Create .env for docker/compose (prod)
        run: |
          mkdir -p docker/compose
          cat <<'EOF' > docker/compose/.env
          # Image registry prefix and version tag for compose
          DOCKER_REGISTRY=${{ secrets.DOCKERHUB_USERNAME }}/
          VERSION=${{ steps.ver.outputs.VERSION }}

          # Application secrets (Prod)
          DB_URL=${{ secrets.DB_URL_PROD }}
          DB_USERNAME=${{ secrets.DB_USERNAME_PROD }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }}
          JWT_SECRET=${{ secrets.JWT_SECRET_PROD }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD_PROD }}
          EOF

      - name: Verify .env exists (prod)
        run: |
          echo "Listing docker/compose" && ls -la docker/compose || true
          if [ ! -s docker/compose/.env ]; then
            echo "::error::.env not created. Check secrets (DB_URL_PROD, DB_USERNAME_PROD, DB_PASSWORD_PROD, JWT_SECRET_PROD)."
            exit 1
          fi
          echo "Preview (values redacted):"
          sed -E 's/(=).*/=REDACTED/' docker/compose/.env

      - name: Upload .env to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker/compose/.env"
          target: "${{ secrets.REMOTE_PATH }}/docker/compose/"

      - name: Upload Nginx config (prod)
        run: |
          ls -la docker/nginx || true
          ls -la docker/nginx/conf.d || true
        shell: bash

      - name: Upload nginx.conf (prod)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker/nginx/nginx.conf"
          target: "${{ secrets.REMOTE_PATH }}/docker/nginx/"

      - name: Upload api.conf (prod)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker/nginx/conf.d/api.conf"
          target: "${{ secrets.REMOTE_PATH }}/docker/nginx/conf.d/"

      - name: Deploy on server (compose up)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
            docker network create aningcall-network || true
            cd "${{ secrets.REMOTE_PATH }}"
            docker compose -f docker/compose/prod.yml pull
            docker compose -f docker/compose/prod.yml up -d
            docker compose -f docker/compose/prod.yml up -d nginx || true
            docker compose -f docker/compose/prod.yml exec -T nginx nginx -t && docker compose -f docker/compose/prod.yml exec -T nginx nginx -s reload || true
