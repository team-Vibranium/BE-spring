### Dev (staging server) Stack
services:
  app:
    image: ${DOCKER_REGISTRY:-}aningcall-backend:${VERSION:-latest}
    container_name: aningcall-app-dev
    env_file:
      - /srv/BE-spring/docker/compose/.env   # ← 반드시 명시
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=${DB_URL?required}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME?required}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD?required}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD:-devredis}
      - JWT_SECRET=${JWT_SECRET?required}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      - OPENAI_API_URL=${OPENAI_API_URL:-https://api.openai.com/v1/realtime/sessions}
      - SERVER_PORT=8080
      - JAVA_OPTS=-Xms512m -Xmx1024m -XX:+UseG1GC
      - LOGGING_FILE_NAME=/app/logs/app.log
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - aningcall-network
    volumes:
      - ../../logs:/app/logs
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: aningcall-redis-dev
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-devredis}
      --appendonly yes
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-devredis}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$REDIS_PASSWORD\" --no-auth-warning PING | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s
    networks:
      - aningcall-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: aningcall-nginx-dev
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/conf.d:/etc/nginx/conf.d
      - letsencrypt:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ../../logs/nginx:/var/log/nginx
    networks:
      - aningcall-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: aningcall-certbot-dev
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: /bin/sh -c
    command: |
      echo 'Certbot helper container. Use compose run to issue/renew certificates.'
    networks:
      - aningcall-network

networks:
  aningcall-network:
    external: true

volumes:
  redis_data:
    driver: local
  letsencrypt:
    driver: local
  certbot-webroot:
    driver: local
