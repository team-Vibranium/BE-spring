# Upstream backend servers (dev)
upstream aningcall_backend_dev {
    zone aningcall_backend_dev 64k;
    server aningcall-app-dev:8080 resolve max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP to HTTPS redirect (dev)
server {
    listen 80;
    server_name dev.proproject.my;

    # ACME challenge for Let's Encrypt (shared cert)
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
        allow all;
        try_files $uri =404;
    }

    # Redirect all other requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server Configuration (dev)
server {
    listen 443 ssl http2;
    server_name dev.proproject.my;

    # SSL Configuration
    # Use SAN cert issued with primary prod domain
    ssl_certificate /etc/letsencrypt/live/prod.proproject.my/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/prod.proproject.my/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Request size limit
    client_max_body_size 10M;

    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;

    # CORS Headers (use whitelist map; includes localhost)
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Vary' 'Origin' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # API Routes
    location /api/ {
        proxy_pass http://aningcall_backend_dev;
    }

    # Redirect extension-less Swagger UI to .html (dev)
    location = /api/swagger-ui {
        return 301 /api/swagger-ui.html;
    }

    # Swagger UI static assets (default mount) and OpenAPI docs (default path)
    # These are needed because Springdoc serves assets under /swagger-ui/** even if the index is moved.
    location /swagger-ui/ {
        proxy_pass http://aningcall_backend_dev;
    }
    location = /swagger-ui {
        return 301 /swagger-ui/index.html;
    }
    location /v3/api-docs {
        proxy_pass http://aningcall_backend_dev;
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://aningcall_backend_dev/actuator/health;
    }

    # Static assets (if any)
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
    }
}
